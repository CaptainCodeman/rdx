const t=Symbol(),s=Symbol(),i=Symbol(),e=Symbol(),n=Symbol(),o=Symbol(),h=Symbol();function a(a,c){return class extends c{constructor(...t){super(...t),this[h]=this[h].bind(this),this[s]()}connectedCallback(){let t=super.connectedCallback;t&&t(),this[i](),this[n]()}disconnectedCallback(){this[o](),this[e]();let t=super.disconnectedCallback;t&&t()}[s](){if(this[t]={},this.mapEvents){const s=this.mapEvents();for(const i in s){const e=s[i];this[t][i]=function(t){t.stopImmediatePropagation(),a.dispatch(e(t))}.bind(this)}}}[i](){for(const s in this[t])this.addEventListener(s,this[t][s],!1)}[e](){for(const s in this[t])this.removeEventListener(s,this[t][s],!1)}[n](){a.addEventListener("state",this[h]),this[h]()}[o](){this.removeEventListener("state",this[h])}[h](){this.mapState&&Object.assign(this,this.mapState(a.state))}}}export{a as connect};
//# sourceMappingURL=connect.js.map
