{"version":3,"file":"thunk.js","sources":["../src/thunk.ts"],"sourcesContent":["import { Store, StoreEvent, Dispatch } from \"./store\";\nimport { dispatchEvent } from './const'\n\nexport type ThunkAction = <S>(dispatch: Dispatch, getState: () => S) => void\n\nexport function thunk(store: Store<any>) {\n  const dispatch = store.dispatch.bind(store)\n\n  store.addEventListener(dispatchEvent, e => {\n    const ev = <CustomEvent<StoreEvent>>e\n    const { action } = ev.detail\n\n    if (typeof action === 'function') {\n      const thunk = <ThunkAction>action\n      thunk(dispatch, store.state)\n\n      // stop event going to other listeners (we've handled it)\n      ev.stopImmediatePropagation()\n\n      // stop action being dispatched to reducer (it's a function)\n      ev.preventDefault()\n    }\n  })\n\n  return store\n}\n"],"names":["thunk","store","dispatch","bind","addEventListener","dispatchEvent","e","ev","action","detail","state","stopImmediatePropagation","preventDefault"],"mappings":"iDAKgBA,EAAMC,GACpB,MAAMC,EAAWD,EAAMC,SAASC,KAAKF,GAkBrC,OAhBAA,EAAMG,iBAAiBC,EAAeC,IACpC,MAAMC,EAA8BD,GAC9BE,OAAEA,GAAWD,EAAGE,OAEtB,GAAsB,mBAAXD,EAAuB,CACLA,EACrBN,EAAUD,EAAMS,OAGtBH,EAAGI,2BAGHJ,EAAGK,oBAIAX"}