{"version":3,"file":"devtools.js","sources":["../src/devtools.ts"],"sourcesContent":["import { Store, StoreEvent } from \"./store\";\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION__: any\n  }\n}\n\nexport function devtools(store: Store<any>) {\n  const extension = window.__REDUX_DEVTOOLS_EXTENSION__\n  \n  if (extension) {\n    const devtools = extension.connect()\n\n    let ignoreState = false\n\n    store.addEventListener('state', e => {\n      const { action } = (<CustomEvent<StoreEvent>>e).detail\n      if (ignoreState) {\n        ignoreState = false\n      } else {\n        devtools.send(action, store.state)\n      }\n    })\n\n    devtools.subscribe(message => {\n      if (message.type === 'DISPATCH' && message.state) {\n        ignoreState = true\n        store.state = JSON.parse(message.state)\n        // trigger state change for connected components\n        store.dispatch({})\n      }\n    })\n    \n    devtools.init(store.state)\n  }\n  \n  return store\n}"],"names":["devtools","store","extension","window","__REDUX_DEVTOOLS_EXTENSION__","connect","ignoreState","addEventListener","e","action","detail","send","state","subscribe","message","type","JSON","parse","dispatch","init"],"mappings":"SAQgBA,EAASC,GACvB,MAAMC,EAAYC,OAAOC,6BAEzB,GAAIF,EAAW,CACb,MAAMF,EAAWE,EAAUG,UAE3B,IAAIC,GAAc,EAElBL,EAAMM,iBAAiB,QAASC,IAC9B,MAAMC,OAAEA,GAAqCD,EAAGE,OAC5CJ,EACFA,GAAc,EAEdN,EAASW,KAAKF,EAAQR,EAAMW,SAIhCZ,EAASa,UAAUC,IACI,aAAjBA,EAAQC,MAAuBD,EAAQF,QACzCN,GAAc,EACdL,EAAMW,MAAQI,KAAKC,MAAMH,EAAQF,OAEjCX,EAAMiB,SAAS,OAInBlB,EAASmB,KAAKlB,EAAMW,OAGtB,OAAOX"}